module.exports = {
  parser: "@typescript-eslint/parser",
  extends: [
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
  ],
  parserOptions: {
    ecmaVersion: 2018,
    sourceType: "module",
  },
  ignorePatterns: ["*.d.ts"],
  plugins: ["@typescript-eslint", "import"],
  env: {
    browser: true,
    node: true,
  },
  rules: {
    indent: ["error", 4, { flatTernaryExpressions: true, SwitchCase: 1 }],
    "eol-last": ["error", "always"],
    camelcase: "off",
    "max-classes-per-file": "off",
    "no-multiple-empty-lines": ["error", { max: 1, maxEOF: 1, maxBOF: 0 }],
    "@typescript-eslint/semi": ["error"],
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/explicit-member-accessibility": ["error"],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-object-literal-type-assertion": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "off",
    "@typescript-eslint/no-var-requires": "off",
    "key-spacing": [
      2,
      {
        afterColon: true,
        align: "value",
        beforeColon: false,
        mode: "minimum",
      },
    ],
    "comma-dangle": [2, "always-multiline"],
    "import/default": "off",
    "import/named": "off",
    "import/no-unresolved": "off",
    "import/namespace": "off",
    "import/no-named-as-default": "off",
    "import/no-named-as-default-member": "off",
    "jsx-quotes": [2, "prefer-double"],
    "import/order": [
      2,
      {
        /*, "alphabetize": {order: "asc"}*/
        "newlines-between": "always",
        groups: [
          ["builtin", "external"],
          "internal",
          "parent",
          "sibling",
          "index",
        ],
      },
    ],
    "@typescript-eslint/ban-types": "off",
    "react/jsx-no-target-blank": "off",
    "func-style": ["error", "declaration", { allowArrowFunctions: true }],
  },
};
